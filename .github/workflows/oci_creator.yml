name: oci_creation

on:
  push:
    branches: [ master, main, 'sprint/**', 'release/**' ]

  pull_request:
    # By default: opened, synchronize, or reopened.
    branches: [ master, main, 'sprint/**', 'release/**' ]
    
jobs:
  oci_creation:
    name: Create an OCI image
    runs-on: ubuntu-latest
    
    steps:

        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - run: pip install jsonref
      
      - name: Checkout this repository
          echo "Checkout this repo"
        uses: actions/checkout@v3
        with:
          path: Bundlegen
          
      - name: Add key
        run: |
          ssh-keyscan -t rsa,
          dsa HOST 2>&1 | sort -u - ~/.ssh/known_hosts > ~/.ssh/tmp_hosts
          mv ~/.ssh/tmp_hosts ~/.ssh/known_hosts
        # ssh-keyscan -H github.com >> ~/.ssh/known_hosts          

      - name: checkout repo
        uses: Javier-varez/google-repo-action@v0.2
        with:
          manifest-url: 'stagingrdkm/lgpub/'
          manifest-branch: 'master'
          manifest-file: 'manifests/dac-dunfell-3.1.6-manifest.xml'
          manifest-group: 'default'
          checkout-deps: false          
      
      - name: Checkout code using bash script
        run: |
            #cd unit_tests
            pwd
            ls -l
            #bash ./Bundlegen/DAC-SDK-checkout.sh
            
      
#      - name: Checkout DAC-SDK
 #       uses: actions/checkout@v3
              #carbohydrates/init-action@v3
  #      with:
   #       repository: stagingrdkm/lgpub
         # https://github.com/stagingrdkm/lgpub/ -m manifests/dac-dunfell-3.1.6-manifest.xml
   #       path: DAC-SDK
          
      - name: Build dac
        run: |
            ls -l
            cd dac
            ls -l
            cd scripts
            ls -l
            bash ./Build_Oci_Image_Bundle.sh -p raspberrypi3 -a dac-image-wayland-egl-test -b master
